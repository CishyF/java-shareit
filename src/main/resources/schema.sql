CREATE TABLE IF NOT EXISTS public."user" (
    id    INTEGER      GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(128) NOT NULL,
    email VARCHAR(128) NOT NULL,
    CONSTRAINT unique_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.item (
    id           INTEGER      GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(256) NOT NULL,
    description  TEXT         NOT NULL,
    is_available BOOLEAN      NOT NULL,
    owner_id     INTEGER      NOT NULL REFERENCES "user" (id)
);

CREATE TABLE IF NOT EXISTS public.booking (
    id        INTEGER                     GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_at  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_at    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    status    INTEGER                     NOT NULL,
    item_id   INTEGER                     NOT NULL REFERENCES item (id),
    booker_id INTEGER                     NOT NULL REFERENCES "user" (id),
    CONSTRAINT start_before_end CHECK (start_at < end_at)
);

CREATE TABLE IF NOT EXISTS public.comment (
    id         INTEGER                     GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text       TEXT                        NOT NULL,
    item_id    INTEGER                     NOT NULL REFERENCES item (id),
    author_id  INTEGER                     NOT NULL REFERENCES "user" (id),
    created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL
);

CREATE TABLE IF NOT EXISTS public.request (
    id           INTEGER                     GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description  TEXT                        NOT NULL,
    requestor_id INTEGER                     NOT NULL REFERENCES "user" (id),
    created_at   TIMESTAMP WITHOUT TIME ZONE NOT NULL
);

CREATE TABLE IF NOT EXISTS public.item_request (
    request_id INTEGER NOT NULL REFERENCES request (id),
    item_id    INTEGER NOT NULL REFERENCES item (id)
);

CREATE UNIQUE INDEX IF NOT EXISTS user_email_index ON public."user" (email);